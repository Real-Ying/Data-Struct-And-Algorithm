#define MaxSize 50
typedef struct{
    ElemType data[MaxSize];
    int length;
}SqList;

#define InitSize 50
typedef struct{
    ElemType *data;
    int MaxSize,length;
}SqList;

L.data = (ElemType*)malloc(sizeof(ElemType)*InitSize); 

//插入
bool ListInsert(SqList &L, ElemType e,int i){
    if(i<1 ||i>length+1)   
        return false;
	if(i>MaxSize)
		return false;
    for(int j=L.length; j>i; j--)
		L.data[j]=L.data[j-1];    
    L.data[i-1]=e;
	L.length++;
}

//按位删除
bool ListDelete(SqList &L,ElemType &e,int i){
	if(i<1 ||i>length)
        return false;
    e=L.data[i-1];
	for(int j=i;j<length;j--)  
		L.data[j-1]=L.data[j];
	L.length--;
	return true;
}

//按值删除：时间复杂度O(n),空间复杂度O(1)
//法一
void Del_x_1(SqList &L,ElemType x){
	int k=0；
	for(int i=0;i<length;i++)
		if(L.data[i]!=x)
			L.data[k]=L.data[i];
            k++;
	L.length=k;		
}
//法二
void Del_x_2(SqList &L,ElemType x){
	int i=0，k=0;
	while(i<1){
		if(L.data[i]==x)
			k++;
		else
			L.data[i-k]=L.data[i];    
		i++;	
	}
	L.length=L.length-k;
}
